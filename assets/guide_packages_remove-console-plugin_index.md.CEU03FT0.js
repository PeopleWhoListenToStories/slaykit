import{_ as i,c as a,a0 as e,o as n}from"./chunks/framework.Db5sgsAJ.js";const c=JSON.parse('{"title":"🔥remove-console-plugins","description":"","frontmatter":{"category":"UA"},"headers":[],"relativePath":"guide/packages/remove-console-plugin/index.md","filePath":"guide/packages/remove-console-plugin/index.md"}'),t={name:"guide/packages/remove-console-plugin/index.md"};function l(p,s,o,h,r,d){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="🔥remove-console-plugins" tabindex="-1">🔥remove-console-plugins <a class="header-anchor" href="#🔥remove-console-plugins" aria-label="Permalink to &quot;🔥remove-console-plugins&quot;">​</a></h1><p>A <strong>Vite plugin</strong> to remove specific <code>console</code> statements (<code>log</code>, <code>info</code>, <code>warn</code>, <code>error</code>, <code>debug</code>, etc.) from your JavaScript/TypeScript code during the build process. The plugin is fully configurable, allowing you to dynamically specify which <code>console</code> methods to remove or retain.</p><hr><h2 id="✨-features" tabindex="-1">✨ Features <a class="header-anchor" href="#✨-features" aria-label="Permalink to &quot;✨ Features&quot;">​</a></h2><ul><li>Remove unwanted <code>console</code> statements to reduce bundle size in production.</li><li>Fully customizable: specify which <code>console</code> methods to remove or retain.</li><li>Works with JavaScript, TypeScript, and JSX/TSX files.</li><li>Easy to integrate with Vite projects.</li></ul><hr><h2 id="📦-installation" tabindex="-1">📦 Installation <a class="header-anchor" href="#📦-installation" aria-label="Permalink to &quot;📦 Installation&quot;">​</a></h2><p>Install the plugin via npm or yarn or pnpm:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Using npm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @slaykit/remove-console-plugin</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Using yarn</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @slaykit/remove-console-plugin</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Using pnpm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @slaykit/remove-console-plugin</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span></span></code></pre></div><h2 id="🚀-usage" tabindex="-1">🚀 Usage <a class="header-anchor" href="#🚀-usage" aria-label="Permalink to &quot;🚀 Usage&quot;">​</a></h2><p>Add the plugin to your vite.config.js or vite.config.ts:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vite&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { removeConsolePlugins } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@slaykit/remove-console-plugin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  plugins: [</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    removeConsolePlugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      include: [], </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Remove</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      exclude: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;error&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;warn&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Retain \`console.error\` and \`console.warn\`, remove others</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="⚙️-api-reference" tabindex="-1">⚙️ API Reference <a class="header-anchor" href="#⚙️-api-reference" aria-label="Permalink to &quot;⚙️ API Reference&quot;">​</a></h2><p>The plugin accepts the following configuration options:</p><table tabindex="0"><thead><tr><th>Option</th><th>Type</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>include</td><td>string[]</td><td><code>[&#39;log&#39;, &#39;info&#39;, &#39;warn&#39;, &#39;error&#39;, &#39;debug&#39;, &#39;trace&#39;]</code></td><td>Specify the console methods to remove. This takes priority over exclude.</td></tr><tr><td>exclude</td><td>string[]</td><td><code>[]</code></td><td>Specify the console methods to retain. If include is provided, this option is ignored.</td></tr></tbody></table><h2 id="贡献" tabindex="-1">贡献 <a class="header-anchor" href="#贡献" aria-label="Permalink to &quot;贡献&quot;">​</a></h2><p>如果你有任何改进建议或发现了问题，欢迎通过 GitHub Issues 向我们反馈，或者提交 Pull Request。</p>`,17)]))}const g=i(t,[["render",l]]);export{c as __pageData,g as default};
